<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frank.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.frank.entity.User">
    <id column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="SEX" jdbcType="CHAR" property="sex" />
    <result column="ROLE" jdbcType="VARCHAR" property="role"/>
    <result column="ACTIVATE" jdbcType="ENUM " property="activate"/>
  </resultMap>

    <update id="updateActivate" parameterType="java.lang.String">
      UPDATE USER
      <set>
        <if test="value != null">ACTIVATE = 'Y'</if>
      </set>
      WHERE EMAIL = #{EmailAddress,jdbcType=VARCHAR}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
      USER_ID, USERNAME, `PASSWORD`, EMAIL, PHONE, SEX, ROLE, ACTIVATE
    from user
    where USER_ID = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where USER_ID = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.frank.entity.User">
    insert into user (USER_ID, USERNAME, `PASSWORD`,
      EMAIL, PHONE, SEX)
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.frank.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="sex != null">
        SEX,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="HasUserName" parameterType="java.lang.String"
          resultType="java.lang.String">
    SELECT user_HasUsername(#{username,jdbcType=VARCHAR})
  </select>
  <select id="HasEmail" parameterType="java.lang.String"
          resultType="java.lang.String">
    SELECT user_HasEmail(#{email,jdbcType=VARCHAR})
  </select>
  <select id="HasPhone" parameterType="java.lang.String"
          resultType="java.lang.String">
    SELECT user_HasPhone(#{phone,jdbcType=VARCHAR},'zh')
  </select>
  <select id="getUserByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
      USER_ID, USERNAME, `PASSWORD`, EMAIL, PHONE, SEX, ROLE, ACTIVATE
    from user
    where EMAIL = #{email,jdbcType=VARCHAR}
  </select>
</mapper>